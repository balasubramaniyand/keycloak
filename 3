# First stage: Build Keycloak with custom configurations and certificates
FROM quay.io/keycloak/keycloak:latest as builder

# Enable health and metrics support
ENV KC_HEALTH_ENABLED=true
ENV KC_METRICS_ENABLED=true

# Configure the database vendor
ENV KC_DB=postgres

WORKDIR /opt/keycloak

# Generate a self-signed certificate (for demonstration purposes only)
RUN keytool -genkeypair -storepass password -keypass password -storetype PKCS12 -keyalg RSA -keysize 2048 \
    -dname "CN=localhost, OU=MyOrgUnit, O=MyOrg, L=MyCity, ST=MyState, C=MyCountry" -alias server \
    -ext "SAN:c=DNS:localhost,IP:127.0.0.1" -keystore conf/server.keystore

# Add the provider JAR file to the providers directory
COPY myprovider.jar /opt/keycloak/providers/myprovider.jar
RUN chown keycloak:keycloak /opt/keycloak/providers/myprovider.jar && chmod 644 /opt/keycloak/providers/myprovider.jar

# Run the build command to include the provider
RUN /opt/keycloak/bin/kc.sh build

# Copy a custom certificate to the CA trust store
COPY mycertificate.crt /etc/pki/ca-trust/source/anchors/mycertificate.crt
RUN update-ca-trust

# Second stage: Prepare UBI micro build
FROM registry.access.redhat.com/ubi9 as ubi-micro-build

RUN mkdir -p /mnt/rootfs && \
    dnf install --installroot /mnt/rootfs <package names go here> --releasever 9 --setopt install_weak_deps=false --nodocs -y && \
    dnf --installroot /mnt/rootfs clean all && \
    rpm --root /mnt/rootfs -e --nodeps setup

# Third stage: Create the final Keycloak image
FROM quay.io/keycloak/keycloak:latest

# Copy built Keycloak from the builder stage
COPY --from=builder /opt/keycloak/ /opt/keycloak/

# Copy the UBI micro build rootfs
COPY --from=ubi-micro-build /mnt/rootfs /

# Set environment variables for database configuration
# Change these values to point to a running Postgres instance
ENV KC_DB=postgres
ENV KC_DB_URL=<DBURL>
ENV KC_DB_USERNAME=<DBUSERNAME>
ENV KC_DB_PASSWORD=<DBPASSWORD>
ENV KC_HOSTNAME=localhost

ENTRYPOINT ["/opt/keycloak/bin/kc.sh", "start"]
